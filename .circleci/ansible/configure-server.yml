---
- name: "configuration play." 
  hosts: web
  user: ec2-user
  gather_facts: false
  
  vars:
    - ansible_python_interpreter: /usr/bin/python3
    - ansible_host_key_checking: false
    - ansible_stdout_callback: yaml
    - CIRCLE_WORKFLOW_ID: "{{ lookup('env','CIRCLE_WORKFLOW_ID') }}"
    - TYPEORM_MIGRATIONS: "{{ lookup('env','TYPEORM_MIGRATIONS') }}"
    - TYPEORM_ENTITIES: "{{ lookup('env','TYPEORM_ENTITIES') }}"
    - TYPEORM_CONNECTION: "{{ lookup('env','TYPEORM_CONNECTION') }}"
    - TYPEORM_HOST: "{{ lookup('env','TYPEORM_HOST') }}"
    - TYPEORM_PORT: "{{ lookup('env','TYPEORM_PORT') }}"
    - TYPEORM_USERNAME: "{{ lookup('env','TYPEORM_USERNAME') }}"
    - TYPEORM_PASSWORD: "{{ lookup('env','TYPEORM_PASSWORD') }}"
    - TYPEORM_DATABASE: "{{ lookup('env','TYPEORM_DATABASE') }}"
    - ENVIRONMENT: "{{ lookup('env','ENVIRONMENT') }}"
    #API_URL: "{{ lookup('env','API_URL') }}"
  pre_tasks:
    - name: "wait 600 seconds for target connection to become reachable/usable."
      wait_for_connection:

    - name: Check for Python
      raw: test -e /usr/bin/python3
      changed_when: false
      failed_when: false
      register: check_python

    - name: "install python for Ansible."
      raw: apt -y update && apt install -y python3
      when: check_python.rc != 0

  roles:
    - configure-server